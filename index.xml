<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Ian Jang&#39;s IT Blog</title>
        <link>http://ianjang.github.io/</link>
        <description>Ian Jang&#39;s IT Blog</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>ianjang0718@gmail.com (IanJang)</managingEditor>
            <webMaster>ianjang0718@gmail.com (IanJang)</webMaster><lastBuildDate>Wed, 01 Jan 2020 00:00:00 &#43;0900</lastBuildDate>
            <atom:link href="http://ianjang.github.io/index.xml" rel="self" type="application/rss+xml" />
        <item>
    <title>EC2 디스크 공간, 메모리 사용량 CloudWatch 지표 쌓기</title>
    <link>http://ianjang.github.io/ec2-%EB%94%94%EC%8A%A4%ED%81%AC-%EA%B3%B5%EA%B0%84-%EB%A9%94%EB%AA%A8%EB%A6%AC-%EC%82%AC%EC%9A%A9%EB%9F%89-cloudwatch-%EC%A7%80%ED%91%9C-%EC%8C%93%EA%B8%B0/</link>
    <pubDate>Wed, 01 Jan 2020 00:00:00 &#43;0900</pubDate>
    <author>Author</author>
    <guid>http://ianjang.github.io/ec2-%EB%94%94%EC%8A%A4%ED%81%AC-%EA%B3%B5%EA%B0%84-%EB%A9%94%EB%AA%A8%EB%A6%AC-%EC%82%AC%EC%9A%A9%EB%9F%89-cloudwatch-%EC%A7%80%ED%91%9C-%EC%8C%93%EA%B8%B0/</guid>
    <description><![CDATA[들어가며 AWS CloudWatch를 이용하여 AWS Cloud Infrastructure에 대한 다양한 지표를 대시보드 형태로 구성하여 모니터링을 할 수 있다. 다만 EC2내부의 DiskSpace와 MemoryUsage에 대해서 모니터링을 하기 위해서는 별도 작업이 필요하다.
 EC2 내부에 지표 수집용 스크립트 설치 DiskSpace, MemoryUsage에 대한 지표를 수집하기 원하는 EC2에 SSH 접속 후 아래 스크립트를 수행하자.
1 2 3 4 5 6 7 8 9 10  $ sudo apt-get update $ sudo apt-get install unzip $ sudo apt-get install libwww-perl libdatetime-perl $ curl &lt;https://aws-cloudwatch.]]></description>
</item><item>
    <title>구동중인 AWS EC2 디스크 용량 늘이기</title>
    <link>http://ianjang.github.io/aws-ec2-volume-size-%EB%8A%98%EC%9D%B4%EA%B8%B0/</link>
    <pubDate>Thu, 18 Apr 2019 00:00:00 &#43;0900</pubDate>
    <author>Author</author>
    <guid>http://ianjang.github.io/aws-ec2-volume-size-%EB%8A%98%EC%9D%B4%EA%B8%B0/</guid>
    <description><![CDATA[들어가며 서비스 도중에 EC2 disk 사이즈가 가득 찼다면, 아래와 같이 처리 가능하다. 먼저 AWS Console 또는 AWS CLI를 이용하여 Volume 사이즈를 늘이고, Volume이 연결된 EC2 shell에 연결하여 Partition 확장을 해야한다. 아래와 같이 진행하면된다.
EC2 Volume Size 수정  AWS Consule에서 아래 경로로 이동  Services &gt; EC2 &gt; Volumes   수정하려는 볼륨을 선택 &gt; Actions - Modify Volume(볼륨수정) 선택 수정을 원하는 Size(크기) 입력  위와 같이 진행하고 나면, 상태가 in-use - optimizing으로 변경된다.]]></description>
</item><item>
    <title>AWS Lambda, S3를 이용한 이미지 변환 자동화(feat. ImageMagick)</title>
    <link>http://ianjang.github.io/aws-lambda-s3%EB%A5%BC-%EC%9D%B4%EC%9A%A9%ED%95%9C-%EC%9D%B4%EB%AF%B8%EC%A7%80-%EB%B3%80%ED%99%98-%EC%9E%90%EB%8F%99%ED%99%94/</link>
    <pubDate>Fri, 05 Apr 2019 00:00:00 &#43;0900</pubDate>
    <author>Author</author>
    <guid>http://ianjang.github.io/aws-lambda-s3%EB%A5%BC-%EC%9D%B4%EC%9A%A9%ED%95%9C-%EC%9D%B4%EB%AF%B8%EC%A7%80-%EB%B3%80%ED%99%98-%EC%9E%90%EB%8F%99%ED%99%94/</guid>
    <description><![CDATA[들어가며 이미지 리소스의 품질은 최대한 유지한 체로, 용량을 줄이기 위한 방법으로 ImageMagick을 사용하고 있었다. 그러던 중 AWS Lambda, s3를 이용하여 자동화 하면 좋겠다는 생각이 들었고, 실제로 이와같이 적용한 케이스가 많음을 확인하고 바로 작업을 진행해보았다. 아래는 작업을 진행하면서 ImageMagick 부터 Lambda 까지 필요한 내용들을 정리해 보았다.
 ImageMagick? 이미지 변환용으로 널리 쓰이는 라이브러리이다.
ImageMagick Option 정말 다양한 옵션값이 있다. 간단하게는 Quality 옵션만으로 이미지 압축이 가능하지만, 압축이 어려운 이미지일 경우 원본보다 용량이 커지는 경우도 있더라.]]></description>
</item><item>
    <title>Crontab 이용하여 주기적으로 오래된 파일 제거하기</title>
    <link>http://ianjang.github.io/crontab-%EC%9D%B4%EC%9A%A9%ED%95%98%EC%97%AC-%EC%A3%BC%EA%B8%B0%EC%A0%81%EC%9C%BC%EB%A1%9C-%EC%98%A4%EB%9E%98%EB%90%9C-%ED%8C%8C%EC%9D%BC-%EC%A0%9C%EA%B1%B0%ED%95%98%EA%B8%B0/</link>
    <pubDate>Thu, 04 Apr 2019 00:00:00 &#43;0900</pubDate>
    <author>Author</author>
    <guid>http://ianjang.github.io/crontab-%EC%9D%B4%EC%9A%A9%ED%95%98%EC%97%AC-%EC%A3%BC%EA%B8%B0%EC%A0%81%EC%9C%BC%EB%A1%9C-%EC%98%A4%EB%9E%98%EB%90%9C-%ED%8C%8C%EC%9D%BC-%EC%A0%9C%EA%B1%B0%ED%95%98%EA%B8%B0/</guid>
    <description><![CDATA[들어가며 특정 경로에 파일(로그, 이미지등)이 누적해서 쌓인다면, 언젠가는 디스크 용량을 가득 채울 수 있다. 이 경우, 특정기간이 지난 파일을 지워주거나, 압축하여 별도 저장소로 옮긴다거나 하는 과정이 필요하다. 스크립트를 작성하고 crontab에 등록하여 이러한 과정을 자동화 할 수 있다.
 Crontab 명령어 1 2 3 4 5 6 7 8  # crontab 추가 / 수정 $ crontab -e # crontab 확인 $ crontab -l # crontab 로그 확인 $ cat /var/log/syslog | grep CRON    Crontab default editor 변경 contab -e 명령 수행시 nano editor로 설정파일이 열려 당황했다.]]></description>
</item><item>
    <title>AWS Media Convert 내용 정리</title>
    <link>http://ianjang.github.io/aws-media-convert-%EB%82%B4%EC%9A%A9%EC%A0%95%EB%A6%AC/</link>
    <pubDate>Mon, 11 Mar 2019 00:00:00 &#43;0900</pubDate>
    <author>Author</author>
    <guid>http://ianjang.github.io/aws-media-convert-%EB%82%B4%EC%9A%A9%EC%A0%95%EB%A6%AC/</guid>
    <description><![CDATA[들어가며 AWS Media Convert를 사용해 보면서 내용을 정리해 보았다.
Pricing  기준:  Basic Plan AVC 코덱 아시아 태평양(서울)     On-Demand 요금      fps&lt;=30 30&lt;fps&lt;=60 60&lt;fps&lt;=120     SD 0.0085 USD 0.0106 USD 0.0127 USD   HD 0.0170 USD 0.0212 USD 0.0255 USD   UHD 0.0340 USD 0.0425 USD 0.0510 USD      RTS(ReservedTranscodeSlots) 요금 12개월 약정: 500 USD]]></description>
</item><item>
    <title>Jekyll Template 적용하기</title>
    <link>http://ianjang.github.io/jekyll-template-%EC%A0%81%EC%9A%A9%ED%95%98%EA%B8%B0/</link>
    <pubDate>Sat, 01 Apr 2017 00:00:00 &#43;0900</pubDate>
    <author>Author</author>
    <guid>http://ianjang.github.io/jekyll-template-%EC%A0%81%EC%9A%A9%ED%95%98%EA%B8%B0/</guid>
    <description><![CDATA[마음에드는 Template 찾기 우선 아래 사이트들 중, 혹은 구글링을 통해 마음에 드는 jekyll Template을 찾는다.
 http://jekyllthemes.org/ https://jekyllthemes.io/ https://github.com/jekyll/jekyll/wiki/Themes  나는 template으로 lanyon-plus을 선택했다. 군더더기 없이 심플한 UI가 무척 맘에 들었다.
lanyon-plus Git-hub: https://github.com/dyndna/lanyon-plus
 Template 다운로드 아마도 대부분의 jekyll template이 github에 공유되어 있을 것이다. template을 다운받거나 git 으로 clone하자. 나는 git clone방식을 택했다.
1  $ git clone https://github.com/dyndna/lanyon-plus.git   Package 설치 template을 다운받은 경로에서 jekyll을 구동해보자.
1  $ jekyll serve   아마도 잘 되지 않을것이며, 아래와 같은 에러메시지를 마주할 것이다.]]></description>
</item><item>
    <title>Sublime Text3에서 Markdown 문서 작성하기</title>
    <link>http://ianjang.github.io/sublimetext3%EC%97%90%EC%84%9C-markdown-%EB%AC%B8%EC%84%9C-%EC%9E%91%EC%84%B1%ED%95%98%EA%B8%B0/</link>
    <pubDate>Sat, 04 Mar 2017 00:00:00 &#43;0900</pubDate>
    <author>Author</author>
    <guid>http://ianjang.github.io/sublimetext3%EC%97%90%EC%84%9C-markdown-%EB%AC%B8%EC%84%9C-%EC%9E%91%EC%84%B1%ED%95%98%EA%B8%B0/</guid>
    <description><![CDATA[들어가며 블로깅을 하기로 결심하고서, 이에 적합한 Markdown Editor를 찾다보니 굉장히 다양한 Markdown Tool이 있더라. 걔중에는 유료툴도 있고, 한국인 개발자가 만든 하루패드(Haroo pad)도 매우 평이 좋았다. 어떤것을 쓸까 고민하던 중 문득 Sublime Text에 Markdown용 Plugin이 있지 않을까 하는 생각이 들었다. 역시나 다양한 Plugin들이 존재했고, 그중 몇가지를 소개하려한다.
 나무위키:마크다운 What is MarkDown?   Markdown Editing &amp; Markdown Preview Markdown Editing은 Markdown 문법으로 문서작성을 할 수 있도록 도와준다. 세가지 문법(Standard Markdown, GitHub flavored Markdown, MultiMarkdown) 을 지원하고, Syntax Highlighting과 몇 가지 Color scheme 제공한다.]]></description>
</item><item>
    <title>Python Flask with SQLAlchemy</title>
    <link>http://ianjang.github.io/python-flask-with-sqlalchemy/</link>
    <pubDate>Thu, 09 Feb 2017 00:00:00 &#43;0900</pubDate>
    <author>Author</author>
    <guid>http://ianjang.github.io/python-flask-with-sqlalchemy/</guid>
    <description><![CDATA[들어가며 pymysql을 이용해서 flask에서 Database를 다뤄봤다. 헌데 뭔가 부족한 감이있다. 자원을 체계적으로 관리하기 힘들어 보였다. 그래서 다른 모듈이 있지 않을까 하여 구글링해보았다. 그 결과 SQLAlchemy 또는 Flask-SQLAlchemy를 이용한 케이스들이 많더라. 어떤것을 사용하는게 좋을까?
SQLAlchemy vs. Flask-SQLAlchemy 우선 지속적으로 관리가 되고 있는지가 궁금했다. Github에서 각각의 repository를 살펴봤다. 먼저 Flask-SQLAlchemy는 2.1 버전이 stable한 버전이며 2015년 10월 23일에 Release 되었다. 반면 SQLAlchemy는 22일 전인 2017년 1월 18일에 1.1.5 버전이 release 되었으며, Release history를 보면 꾸준히 버전이 Update 되고 있음을 확인할 수 있었다.]]></description>
</item><item>
    <title>Python BeautifulSoup 이용 크롤링하기</title>
    <link>http://ianjang.github.io/python-beautifulsoup-%EC%9D%B4%EC%9A%A9-%ED%81%AC%EB%A1%A4%EB%A7%81%ED%95%98%EA%B8%B0/</link>
    <pubDate>Sat, 04 Feb 2017 00:00:00 &#43;0900</pubDate>
    <author>Author</author>
    <guid>http://ianjang.github.io/python-beautifulsoup-%EC%9D%B4%EC%9A%A9-%ED%81%AC%EB%A1%A4%EB%A7%81%ED%95%98%EA%B8%B0/</guid>
    <description><![CDATA[BeautifulSoup 설치 Python을 통한 클로링에 대해서 서치해보니, beautifulSoup를 활용한 예제들이 많더라. 우선 설치해보자.
1  $ pip install beautifulSoup4   크롤링 시작하기 클리앙의 모두의공원 카테고리의 글을 크롤링해보려 한다. 레퍼런스 사이트내용을 참고해서 아래와 같이 진행해 보았다. 우선 해당 페이지의 모든 html text를 긁어와보자
1 2 3 4 5 6 7 8  import requests from bs4 import BeautifulSoup if __name__ == &#39;__main__&#39;: url = &#34;http://www.clien.net/cs2/bbs/board.php?bo_table=park&#34; source_code = requests.get(url) plain_text = source_code.]]></description>
</item><item>
    <title>Jekyll3로 블로그 만들기</title>
    <link>http://ianjang.github.io/jekyll3%EB%A1%9C-%EB%B8%94%EB%A1%9C%EA%B7%B8-%EB%A7%8C%EB%93%A4%EA%B8%B0/</link>
    <pubDate>Fri, 20 Jan 2017 00:00:00 &#43;0900</pubDate>
    <author>Author</author>
    <guid>http://ianjang.github.io/jekyll3%EB%A1%9C-%EB%B8%94%EB%A1%9C%EA%B7%B8-%EB%A7%8C%EB%93%A4%EA%B8%B0/</guid>
    <description><![CDATA[들어가며 Jekyll을 이용하여 블로그를 구성해보자
사전준비 Ruby  Jekyll 2 사용 시 v1.9.3 이상 / Jekyll 3 사용 시 v2 이상 나는 2.3.3 버전을 설치했다. &ldquo;설치경로\bin&rdquo; 을 환경변수에 추가하자. Download Link: https://rubyinstaller.org/downloads  RubyGems  Ruby 1.9 이상의 버전을 설치하면 RubyGems가 동봉되어있다. 이미 우리는 2.3.3 버전을 설치했으므로 패스.   Download Link: https://www.python.org/downloads   Jekyll 설치하기 매우 간단하다. 아래와같이 명령어를 타이핑하면된다.
1  $ gem install jekyll    Jekyll 템플릿 적용하기 검색해보면 다양한 jekyll Free templete들이 존재한다.]]></description>
</item></channel>
</rss>
