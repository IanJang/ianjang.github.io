<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>AWS - Category - Ian Jang&#39;s IT Blog</title>
        <link>https://ianjang.github.io/categories/aws/</link>
        <description>AWS - Category - Ian Jang&#39;s IT Blog</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>ianjang0718@gmail.com (IanJang)</managingEditor>
            <webMaster>ianjang0718@gmail.com (IanJang)</webMaster><lastBuildDate>Wed, 01 Jan 2020 00:00:00 &#43;0900</lastBuildDate><atom:link href="https://ianjang.github.io/categories/aws/" rel="self" type="application/rss+xml" /><item>
    <title>EC2 디스크 공간, 메모리 사용량 CloudWatch 지표 쌓기</title>
    <link>https://ianjang.github.io/ec2-%EB%94%94%EC%8A%A4%ED%81%AC-%EA%B3%B5%EA%B0%84-%EB%A9%94%EB%AA%A8%EB%A6%AC-%EC%82%AC%EC%9A%A9%EB%9F%89-cloudwatch-%EC%A7%80%ED%91%9C-%EC%8C%93%EA%B8%B0/</link>
    <pubDate>Wed, 01 Jan 2020 00:00:00 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://ianjang.github.io/ec2-%EB%94%94%EC%8A%A4%ED%81%AC-%EA%B3%B5%EA%B0%84-%EB%A9%94%EB%AA%A8%EB%A6%AC-%EC%82%AC%EC%9A%A9%EB%9F%89-cloudwatch-%EC%A7%80%ED%91%9C-%EC%8C%93%EA%B8%B0/</guid>
    <description><![CDATA[들어가며 AWS CloudWatch를 이용하여 AWS Cloud Infrastructure에 대한 다양한 지표를 대시보드 형태로 구성하여 모니터링을 할 수 있습니다. 다만 EC2 내부의 디스크 공간(Disk Space)과 메모리 사용량(Memory Usage)을 모니터링하기 위해서는 별도 작업이 필요합니다.
 EC2 내부에 지표 수집용 스크립트 설치 디스크 공간(Disk Space), 메모리 사용량(Memory Usage) 지표를 수집하고 싶은 EC2에 SSH 접속하여 아래 스크립트를 수행합시다.
1 2 3 4 5 6 7 8 9 10  $ sudo apt-get update $ sudo apt-get install unzip $ sudo apt-get install libwww-perl libdatetime-perl $ curl &lt;https://aws-cloudwatch.]]></description>
</item><item>
    <title>구동 중인 AWS EC2 디스크 용량 늘리기</title>
    <link>https://ianjang.github.io/aws-ec2-volume-size-%EB%8A%98%EC%9D%B4%EA%B8%B0/</link>
    <pubDate>Thu, 18 Apr 2019 00:00:00 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://ianjang.github.io/aws-ec2-volume-size-%EB%8A%98%EC%9D%B4%EA%B8%B0/</guid>
    <description><![CDATA[들어가며 서비스 운영 중인 EC2의 디스크 용량이 가득 차는 문제가 발생할 수 있습니다. 이때 정지 시간(Downtime) 없이 디스크 용량을 늘릴 수 있습니다. 먼저 AWS Console 또는 AWS CLI를 이용하여 Volume 사이즈를 늘인 후 Volume이 연결된 EC2에 SSH 접속하여 Partition 확장을 해야 합니다. 더욱 자세한 내용은 본문을 참고 바랍니다.
EC2 Volume Size 수정 아래 순서대로 작업을 진행합시다.
 AWS Console 접속 &gt; Services &gt; EC2 &gt; Volumes 수정하려는 볼륨 선택 &gt; Actions - Modify Volume(볼륨수정) 선택 수정을 원하는 Size(크기) 입력  작업을 완료하고 나면 Volume의 상태가 &ldquo;in-use - optimizing&quot;으로 변경됩니다.]]></description>
</item><item>
    <title>AWS Lambda, S3를 이용한 이미지 변환 자동화(feat. ImageMagick)</title>
    <link>https://ianjang.github.io/aws-lambda-s3%EB%A5%BC-%EC%9D%B4%EC%9A%A9%ED%95%9C-%EC%9D%B4%EB%AF%B8%EC%A7%80-%EB%B3%80%ED%99%98-%EC%9E%90%EB%8F%99%ED%99%94/</link>
    <pubDate>Fri, 05 Apr 2019 00:00:00 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://ianjang.github.io/aws-lambda-s3%EB%A5%BC-%EC%9D%B4%EC%9A%A9%ED%95%9C-%EC%9D%B4%EB%AF%B8%EC%A7%80-%EB%B3%80%ED%99%98-%EC%9E%90%EB%8F%99%ED%99%94/</guid>
    <description><![CDATA[들어가며 이미지 리소스를 S3에 업로드 하면 자동으로 압축이 되게 할 순 없을까? AWS Lambda를 이용하면 이 같은 자동화된 기능을 구현하여 사용할 수 있습니다. 여러 가지 사례를 참고하여 직접 자동화 작업을 진행하고, 그 내용을 정리해 보았습니다.
 ImageMagick 먼저 이미지 압축을 위해 사용한 ImageMagick을 소개합니다. ImageMagick은 이미지 변환용으로 널리 쓰이는 오픈소스 라이브러리입니다.
 위키백과:이미지매직  ImageMagick 설치 저는 먼저 우분투환경에서 ImageMagick을 설치하여 사용해 보았습니다. 아래 순서로 진행하였습니다.
1 2 3 4 5 6 7 8 9 10 11 12  # PNG library 설치 $ sudo apt-get install libpng-dev # ImageMagick 설치 $ git clone https://github.]]></description>
</item><item>
    <title>AWS Media Convert 파해치기</title>
    <link>https://ianjang.github.io/aws-media-convert-%EB%82%B4%EC%9A%A9%EC%A0%95%EB%A6%AC/</link>
    <pubDate>Mon, 11 Mar 2019 00:00:00 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://ianjang.github.io/aws-media-convert-%EB%82%B4%EC%9A%A9%EC%A0%95%EB%A6%AC/</guid>
    <description><![CDATA[들어가며 효과적인 영상 압축을 위해 AWS Media Convert 서비스를 사용해 보았습니다. 막상 사용하려고 보니 온통 처음 보는 용어가 가득했습니다. 이런 용어들을 이해해야 제대로 기능을 활용할 수 있을 것 같았습니다. 본문에는 기본적인 AWS Media Convert 서비스에 대한 소개와 더불어 각종 영상 압축 관련 용어들을 조금은 두서없이 정리해 보았습니다.
비용(Pricing)  Basic Plan / AVC 코덱 / 아시아 태평양(서울) 리전 / On-Demand 요금 기준      fps&lt;=30 30&lt;fps&lt;=60 60&lt;fps&lt;=120     SD 0.]]></description>
</item></channel>
</rss>
