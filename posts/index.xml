<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>All Posts - Ian Jang&#39;s IT Blog</title>
        <link>https://ianjang.github.io/posts/</link>
        <description>All Posts | Ian Jang&#39;s IT Blog</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>ianjang0718@gmail.com (IanJang)</managingEditor>
            <webMaster>ianjang0718@gmail.com (IanJang)</webMaster><lastBuildDate>Fri, 13 Nov 2020 01:16:00 &#43;0900</lastBuildDate><atom:link href="https://ianjang.github.io/posts/" rel="self" type="application/rss+xml" /><item>
    <title>Django ORM PostgreSQL JSONField에 대해 exclude 구문 사용시 주의사항</title>
    <link>https://ianjang.github.io/django-orm-postgresql-jsonfield%EC%97%90-%EB%8C%80%ED%95%B4-exclude-%EA%B5%AC%EB%AC%B8-%EC%82%AC%EC%9A%A9%EC%8B%9C-%EC%A3%BC%EC%9D%98%EC%82%AC%ED%95%AD/</link>
    <pubDate>Fri, 13 Nov 2020 01:16:00 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://ianjang.github.io/django-orm-postgresql-jsonfield%EC%97%90-%EB%8C%80%ED%95%B4-exclude-%EA%B5%AC%EB%AC%B8-%EC%82%AC%EC%9A%A9%EC%8B%9C-%EC%A3%BC%EC%9D%98%EC%82%AC%ED%95%AD/</guid>
    <description><![CDATA[들어가며 PostgreSQL JSON Field에 대하여 ORM 구문 작성 시 exclude를 사용한다면 주의하길 바랍니다. JSON Field에 대한 질의 결과가 일반적인(?) 예상과는 조금 다른 결과가 나옵니다. 그 때문에 이 같은 내용을 모르고 사용한다면 혼란에 빠질 수 있습니다. 실제로 본인 포함한 여러 개발자가 동일한 케이스로 혼란을 겪은 경험이 있습니다. 본 글의 내용을 접한 분들은 동일한 혼란을 겪지 않을 수 있길 바랍니다.
(본 글은 Django 3.0.7, psycopg2-binary 2.8.5, PostgreSQL 12.4 기준으로 테스트 후 작성되었습니다.)]]></description>
</item><item>
    <title>EC2 디스크 공간, 메모리 사용량 CloudWatch 지표 쌓기</title>
    <link>https://ianjang.github.io/ec2-%EB%94%94%EC%8A%A4%ED%81%AC-%EA%B3%B5%EA%B0%84-%EB%A9%94%EB%AA%A8%EB%A6%AC-%EC%82%AC%EC%9A%A9%EB%9F%89-cloudwatch-%EC%A7%80%ED%91%9C-%EC%8C%93%EA%B8%B0/</link>
    <pubDate>Wed, 01 Jan 2020 00:00:00 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://ianjang.github.io/ec2-%EB%94%94%EC%8A%A4%ED%81%AC-%EA%B3%B5%EA%B0%84-%EB%A9%94%EB%AA%A8%EB%A6%AC-%EC%82%AC%EC%9A%A9%EB%9F%89-cloudwatch-%EC%A7%80%ED%91%9C-%EC%8C%93%EA%B8%B0/</guid>
    <description><![CDATA[들어가며 AWS CloudWatch를 이용하여 AWS Cloud Infrastructure에 대한 다양한 지표를 대시보드 형태로 구성하여 모니터링을 할 수 있습니다. 다만 EC2 내부의 디스크 공간(Disk Space)과 메모리 사용량(Memory Usage)을 모니터링하기 위해서는 별도 작업이 필요합니다.
 EC2 내부에 지표 수집용 스크립트 설치 디스크 공간(Disk Space), 메모리 사용량(Memory Usage) 지표를 수집하고 싶은 EC2에 SSH 접속하여 아래 스크립트를 수행합시다.
1 2 3 4 5 6 7 8 9 10  $ sudo apt-get update $ sudo apt-get install unzip $ sudo apt-get install libwww-perl libdatetime-perl $ curl &lt;https://aws-cloudwatch.]]></description>
</item><item>
    <title>구동 중인 AWS EC2 디스크 용량 늘리기</title>
    <link>https://ianjang.github.io/aws-ec2-volume-size-%EB%8A%98%EC%9D%B4%EA%B8%B0/</link>
    <pubDate>Thu, 18 Apr 2019 00:00:00 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://ianjang.github.io/aws-ec2-volume-size-%EB%8A%98%EC%9D%B4%EA%B8%B0/</guid>
    <description><![CDATA[들어가며 서비스 운영 중인 EC2의 디스크 용량이 가득 차는 문제가 발생할 수 있습니다. 이때 정지 시간(Downtime) 없이 디스크 용량을 늘릴 수 있습니다. 먼저 AWS Console 또는 AWS CLI를 이용하여 Volume 사이즈를 늘인 후 Volume이 연결된 EC2에 SSH 접속하여 Partition 확장을 해야 합니다. 더욱 자세한 내용은 본문을 참고 바랍니다.
EC2 Volume Size 수정 아래 순서대로 작업을 진행합시다.
 AWS Console 접속 &gt; Services &gt; EC2 &gt; Volumes 수정하려는 볼륨 선택 &gt; Actions - Modify Volume(볼륨수정) 선택 수정을 원하는 Size(크기) 입력  작업을 완료하고 나면 Volume의 상태가 &ldquo;in-use - optimizing&quot;으로 변경됩니다.]]></description>
</item><item>
    <title>AWS Lambda, S3를 이용한 이미지 변환 자동화(feat. ImageMagick)</title>
    <link>https://ianjang.github.io/aws-lambda-s3%EB%A5%BC-%EC%9D%B4%EC%9A%A9%ED%95%9C-%EC%9D%B4%EB%AF%B8%EC%A7%80-%EB%B3%80%ED%99%98-%EC%9E%90%EB%8F%99%ED%99%94/</link>
    <pubDate>Fri, 05 Apr 2019 00:00:00 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://ianjang.github.io/aws-lambda-s3%EB%A5%BC-%EC%9D%B4%EC%9A%A9%ED%95%9C-%EC%9D%B4%EB%AF%B8%EC%A7%80-%EB%B3%80%ED%99%98-%EC%9E%90%EB%8F%99%ED%99%94/</guid>
    <description><![CDATA[들어가며 이미지 리소스를 S3에 업로드 하면 자동으로 압축이 되게 할 순 없을까? AWS Lambda를 이용하면 이 같은 자동화된 기능을 구현하여 사용할 수 있습니다. 여러 가지 사례를 참고하여 직접 자동화 작업을 진행하고, 그 내용을 정리해 보았습니다.
 ImageMagick 먼저 이미지 압축을 위해 사용한 ImageMagick을 소개합니다. ImageMagick은 이미지 변환용으로 널리 쓰이는 오픈소스 라이브러리입니다.
 위키백과:이미지매직  ImageMagick 설치 저는 먼저 우분투환경에서 ImageMagick을 설치하여 사용해 보았습니다. 아래 순서로 진행하였습니다.
1 2 3 4 5 6 7 8 9 10 11 12  # PNG library 설치 $ sudo apt-get install libpng-dev # ImageMagick 설치 $ git clone https://github.]]></description>
</item><item>
    <title>Crontab 이용하여 주기적으로 오래된 파일 제거하기</title>
    <link>https://ianjang.github.io/crontab-%EC%9D%B4%EC%9A%A9%ED%95%98%EC%97%AC-%EC%A3%BC%EA%B8%B0%EC%A0%81%EC%9C%BC%EB%A1%9C-%EC%98%A4%EB%9E%98%EB%90%9C-%ED%8C%8C%EC%9D%BC-%EC%A0%9C%EA%B1%B0%ED%95%98%EA%B8%B0/</link>
    <pubDate>Thu, 04 Apr 2019 00:00:00 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://ianjang.github.io/crontab-%EC%9D%B4%EC%9A%A9%ED%95%98%EC%97%AC-%EC%A3%BC%EA%B8%B0%EC%A0%81%EC%9C%BC%EB%A1%9C-%EC%98%A4%EB%9E%98%EB%90%9C-%ED%8C%8C%EC%9D%BC-%EC%A0%9C%EA%B1%B0%ED%95%98%EA%B8%B0/</guid>
    <description><![CDATA[들어가며 서버 애플리케이션이 특정 경로에 파일(로그, 이미지 등)을 쌓는 구조로 되어 있다면 언젠가 용량이 가득 차는 문제를 맞이할 수 있습니다. 이를 예방하기 위해선 특정 기간이 지난 파일을 지우거나, 압축하여 별도 저장소로 옮긴다거나 하는 과정이 필요합니다. 간단한 shell 스크립트를 작성하고 crontab에 등록하여 이러한 과정을 자동화 할 수 있습니다.
 Crontab 명령어 1 2 3 4 5 6 7 8  # crontab 추가 / 수정 $ crontab -e # crontab 확인 $ crontab -l # crontab 로그 확인 $ cat /var/log/syslog | grep CRON    오래된 파일을 제거하는 스크립트 작성하기 아래 정리된 명령어를 참고합시다.]]></description>
</item><item>
    <title>AWS Media Convert 파해치기</title>
    <link>https://ianjang.github.io/aws-media-convert-%EB%82%B4%EC%9A%A9%EC%A0%95%EB%A6%AC/</link>
    <pubDate>Mon, 11 Mar 2019 00:00:00 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://ianjang.github.io/aws-media-convert-%EB%82%B4%EC%9A%A9%EC%A0%95%EB%A6%AC/</guid>
    <description><![CDATA[들어가며 효과적인 영상 압축을 위해 AWS Media Convert 서비스를 사용해 보았습니다. 막상 사용하려고 보니 온통 처음 보는 용어가 가득했습니다. 이런 용어들을 이해해야 제대로 기능을 활용할 수 있을 것 같았습니다. 본문에는 기본적인 AWS Media Convert 서비스에 대한 소개와 더불어 각종 영상 압축 관련 용어들을 조금은 두서없이 정리해 보았습니다.
비용(Pricing)  Basic Plan / AVC 코덱 / 아시아 태평양(서울) 리전 / On-Demand 요금 기준      fps&lt;=30 30&lt;fps&lt;=60 60&lt;fps&lt;=120     SD 0.]]></description>
</item><item>
    <title>Jekyll Template 적용하기</title>
    <link>https://ianjang.github.io/jekyll-template-%EC%A0%81%EC%9A%A9%ED%95%98%EA%B8%B0/</link>
    <pubDate>Sat, 01 Apr 2017 00:00:00 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://ianjang.github.io/jekyll-template-%EC%A0%81%EC%9A%A9%ED%95%98%EA%B8%B0/</guid>
    <description><![CDATA[들어가며 윈도우 환경에서 Jekyll을 사용해 보고 그 내용을 정리해 보았습니다.
 마음에 드는 템플릿 찾기 우선 아래 사이트 중, 혹은 구글링을 통해 마음에 드는 jekyll 템플릿을 찾습니다.
 http://jekyllthemes.org/ https://jekyllthemes.io/ https://github.com/jekyll/jekyll/wiki/Themes  저는 lanyon-plus을 선택했습니다. 군더더기 없이 심플한 UI가 무척 맘에 들었습니다.
 lanyon-plus github repo: https://github.com/dyndna/lanyon-plus   템플릿 다운로드 아마도 대부분의 jekyll 템플릿이 github에 공유되어 있을 것입니다. 아래 명령으로 내려 받습니다.
1  $ git clone https://github.com/dyndna/lanyon-plus.git   Package 설치 템플릿을 다운받은 경로에서 jekyll을 구동해봅시다.]]></description>
</item><item>
    <title>Sublime Text3에서 Markdown 문서 작성하기</title>
    <link>https://ianjang.github.io/sublimetext3%EC%97%90%EC%84%9C-markdown-%EB%AC%B8%EC%84%9C-%EC%9E%91%EC%84%B1%ED%95%98%EA%B8%B0/</link>
    <pubDate>Sat, 04 Mar 2017 00:00:00 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://ianjang.github.io/sublimetext3%EC%97%90%EC%84%9C-markdown-%EB%AC%B8%EC%84%9C-%EC%9E%91%EC%84%B1%ED%95%98%EA%B8%B0/</guid>
    <description><![CDATA[들어가며 블로깅을 하기로 하고서 편리한 Markdown Editor를 찾아 헤맸습니다. 굉장히 다양한 Markdown Tool이 있었습니다. 한국인 개발자가 만든 하루 패드(Haroo pad)도 매우 평이 좋았습니다. 어떤 것을 쓸까 고민하던 중에 평소 자주 사용하는 Sublime Text에 Markdown 용 Plugin이 있지 않을까 하는 생각이 들었습니다. 역시나 다양한 Plugin들이 존재했고, 그중 몇 가지를 소개하려 합니다.
 나무위키:마크다운 What is MarkDown?   Markdown Editing &amp; Markdown Preview Markdown Editing은 Markdown 문법으로 문서작성을 할 수 있도록 도와줍니다.]]></description>
</item><item>
    <title>Python Flask with SQLAlchemy</title>
    <link>https://ianjang.github.io/python-flask-with-sqlalchemy/</link>
    <pubDate>Thu, 09 Feb 2017 00:00:00 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://ianjang.github.io/python-flask-with-sqlalchemy/</guid>
    <description><![CDATA[들어가며 pymysql을 이용해서 flask에서 Database를 다뤄보았습니다. 뭔가 부족한 감이 있었습니다. 자원을 체계적으로 관리하기 힘들어 보였습니다. 그래서 대안을 찾아보았고 SQLAlchemy과 Flask-SQLAlchemy에 대한 사례들이 있었습니다. 본문에 관련 내용을 정리해 보았습니다.
 SQLAlchemy vs. Flask-SQLAlchemy 우선 모듈이 지속적으로 관리가 되고 있는지가 궁금했습니다. Github에서 각각의 저장소를 살펴봤습니다. 먼저 Flask-SQLAlchemy는 2.1 버전이 최신 stable 버전이며, 2015년 10월 23일에 Release 되었습니다. 반면 SQLAlchemy는 22일 전인 2017년 1월 18일에 1.1.5 버전이 release 되었으며, Release history를 보면 꾸준히 버전이 Update 되고 있음을 확인할 수 있었습니다.]]></description>
</item><item>
    <title>Python BeautifulSoup 이용 크롤링하기</title>
    <link>https://ianjang.github.io/python-beautifulsoup-%EC%9D%B4%EC%9A%A9-%ED%81%AC%EB%A1%A4%EB%A7%81%ED%95%98%EA%B8%B0/</link>
    <pubDate>Sat, 04 Feb 2017 00:00:00 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://ianjang.github.io/python-beautifulsoup-%EC%9D%B4%EC%9A%A9-%ED%81%AC%EB%A1%A4%EB%A7%81%ED%95%98%EA%B8%B0/</guid>
    <description><![CDATA[들어가며 Python을 이용하여 크롤링을 해보았습니다. BeautifulSoup를 이용한 사례들이 많았고 참고하여 진행해 보았습니다.
 BeautifulSoup 설치 1  $ pip install beautifulSoup4    크롤링 시작하기 클리앙의 모두의공원 카테고리의 글을 크롤링해보려 합니다. 레퍼런스 사이트내용을 참고해서 아래와 같이 진행해 보았습니다. 우선 해당 페이지의 모든 html text를 긁어와봅시다.
1 2 3 4 5 6 7 8  import requests from bs4 import BeautifulSoup if __name__ == &#39;__main__&#39;: url = &#34;http://www.clien.net/cs2/bbs/board.php?bo_table=park&#34; source_code = requests.]]></description>
</item></channel>
</rss>
